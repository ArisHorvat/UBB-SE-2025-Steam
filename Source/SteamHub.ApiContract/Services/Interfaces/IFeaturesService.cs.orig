using System.Collections.Generic;
<<<<<<< HEAD
using BusinessLayer.Models;
=======
using System.Threading.Tasks;
>>>>>>> main
using SteamHub.ApiContract.Models;

namespace SteamHub.ApiContract.Services.Interfaces
{
    public interface IFeaturesService
    {
<<<<<<< HEAD
        Dictionary<string, List<Feature>> GetFeaturesByCategories();
        Dictionary<string, List<Feature>> GetFeaturesByCategories(int userId);
        bool EquipFeature(int userIdentifier, int featureIdentifier);
        (bool, string) UnequipFeature(int userIdentifier, int featureIdentifier);
        List<Feature> GetUserEquippedFeatures(int userIdentifier);
        bool IsFeaturePurchased(int userIdentifier, int featureIdentifier);
        (bool success, string message) PurchaseFeature(int userIdentifier, int featureIdentifier);
        (string profilePicturePath, string bioText, List<Feature> equippedFeatures) GetFeaturePreviewData(int userIdentifier, int featureIdentifier);

        IUserService UserService { get; }

        List<Feature> GetUserFeatures(int userIdentifier);

        Feature GetFeatureById(int featureId);
    }
}
=======
        Task<List<Feature>> GetAllFeaturesAsync(int userId);
        Task<List<Feature>> GetFeaturesByTypeAsync(string type);
        Task<List<Feature>> GetUserFeaturesAsync(int userIdentifier);
        Task<bool> IsFeaturePurchasedAsync(int userId, int featureId);
        Task<bool> EquipFeatureAsync(int userId, int featureId);
        Task<bool> UnequipFeatureAsync(int userIdentifier, int featureIdentifier);
        Task<bool> UnequipFeaturesByTypeAsync(int userIdentifier, string featureType);
        Task<bool> AddUserFeatureAsync(int userIdentifier, int featureIdentifier);
        Task<List<Feature>> GetEquippedFeaturesAsync(int userId);
        Task<Feature> GetFeatureByIdAsync(int featureId);
        Task<Dictionary<string, List<Feature>>> GetFeaturesByCategoriesAsync(int userId);
        Task<(string profilePicturePath, string bioText, List<Feature> equippedFeatures)> GetFeaturePreviewDataAsync(int userId, int featureId);
    }
} 
>>>>>>> main
